#keycloak Network
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  creationTimestamp: null
  name: keycloak-network
spec:
  ingress:
    - from:
        - podSelector:
            matchLabels:
              io.kompose.network/keycloak-network: "true"
  podSelector:
    matchLabels:
      io.kompose.network/keycloak-network: "true"

---
#KEYCLOAK DATABASE - persistent claim volume claim
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: keycloakdb
  name: keycloakdb
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
status: {}

---
#KEYCLOAK DATABASE - service
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.26.1 (a9d05d509)
  creationTimestamp: null
  labels:
    io.kompose.service: keycloakdb
  name: keycloakdb
spec:
  ports:
    - name: "5433"
      port: 5433
      targetPort: 5434
  selector:
    io.kompose.service: keycloakdb
status:
  loadBalancer: {}

---
#KEYCLOAK DATABASE - deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.26.1 (a9d05d509)
  creationTimestamp: null
  labels:
    io.kompose.service: keycloakdb
  name: keycloakdb
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: keycloakdb
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert
        kompose.version: 1.26.1 (a9d05d509)
      creationTimestamp: null
      labels:
        io.kompose.network/keycloak-network: "true"
        io.kompose.service: keycloakdb
    spec:
      containers:
        - env:
            - name: POSTGRES_DB
              value: keycloakdb
            - name: POSTGRES_PASSWORD
              value: admin
            - name: POSTGRES_USER
              value: admin
          image: postgres:latest
          name: keycloakdb
          resources: {}
          volumeMounts:
            - mountPath: /var/lib/pgsql/data
              name: keycloakdb
      restartPolicy: Always
      volumes:
        - name: keycloakdb
          persistentVolumeClaim:
            claimName: keycloakdb
status: {}

---
#KEYCLOAK SERVICE - persistent volume claim
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: keycloak-service-claim0
  name: keycloak-service-claim0
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
status: {}

---
#KEYCLOAK SERVICE - service
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.26.1 (a9d05d509)
  creationTimestamp: null
  labels:
    io.kompose.service: keycloak-service
  name: keycloak-service
spec:
  ports:
    - name: "8080"
      port: 8080
      targetPort: 8080
  selector:
    io.kompose.service: keycloak-service
status:
  loadBalancer: {}

---
#KEYCLOAK SERVICE - deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.26.1 (a9d05d509)
  creationTimestamp: null
  labels:
    io.kompose.service: keycloak-service
  name: keycloak-service
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: keycloak-service
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert
        kompose.version: 1.26.1 (a9d05d509)
      creationTimestamp: null
      labels:
        io.kompose.network/keycloak-network: "true"
        io.kompose.service: keycloak-service
    spec:
      containers:
        - args:
            - start-dev
          command:
            - ./scripts/keycloak_migration/keycloak-entrypoint.sh
          env:
            - name: DB_DATABASE
              value: keycloakdb
            - name: DB_PASSWORD
              value: admin
            - name: DB_USER
              value: admin
            - name: DB_VENDOR
              value: postgres
            - name: KEYCLOAK_ADMIN
              value: sphokuhle
            - name: KEYCLOAK_ADMIN_PASSWORD
              value: sphokuhle
            - name: KEYCLOAK_IMPORT
              value: ./scripts/keycloak_migration/demo_realm.json
          image: quay.io/keycloak/keycloak:19.0.2
          name: keycloak-service
          ports:
            - containerPort: 8080
          resources: {}
          volumeMounts:
            - mountPath: /scripts/keycloak_migration
              name: keycloak-service-claim0
      restartPolicy: Always
      volumes:
        - name: keycloak-service-claim0
          persistentVolumeClaim:
            claimName: keycloak-service-claim0
status: {}


#**********DEMO*************
---
#DEMO DATABASE - persistent volume claim (demodb-claim1)
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: demodb-claim1
  name: demodb-claim1
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
status: {}

---
#DEMO DATABASE - persistent volume claim (demodb)
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: demodb
  name: demodb
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
status: {}

---
#DEMO DATABASE - service
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.26.1 (a9d05d509)
  creationTimestamp: null
  labels:
    io.kompose.service: demodb
  name: demodb
spec:
  ports:
    - name: "5432"
      port: 5432
      targetPort: 5433
  selector:
    io.kompose.service: demodb
status:
  loadBalancer: {}

---
#DEMO DATABASE - deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.26.1 (a9d05d509)
  creationTimestamp: null
  labels:
    io.kompose.service: demodb
  name: demodb
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: demodb
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert
        kompose.version: 1.26.1 (a9d05d509)
      creationTimestamp: null
      labels:
        io.kompose.network/keycloak-network: "true"
        io.kompose.service: demodb
    spec:
      containers:
        - env:
            - name: POSTGRES_DB
              value: demodatabase
            - name: POSTGRES_PASSWORD
              value: posPassword1
            - name: POSTGRES_USER
              value: postgres
          image: postgres:latest
          name: demodb
          ports:
            - containerPort: 5433
          resources: {}
          volumeMounts:
            - mountPath: /var/lib/pgsql/data
              name: demodb
            - mountPath: /docker-entrypoint-initdb.d
              name: demodb-claim1
      restartPolicy: Always
      volumes:
        - name: demodb
          persistentVolumeClaim:
            claimName: demodb
        - name: demodb-claim1
          persistentVolumeClaim:
            claimName: demodb-claim1
status: {}

---
#DEMO SERVICE - service
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.26.1 (a9d05d509)
  creationTimestamp: null
  labels:
    io.kompose.service: demo-service
  name: demo-service
spec:
  ports:
    - name: "8443"
      port: 8443
      targetPort: 8443
  selector:
    io.kompose.service: demo-service
status:
  loadBalancer: {}

---
#DEMO SERVICE - pod
apiVersion: v1
kind: Pod
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.26.1 (a9d05d509)
  creationTimestamp: null
  labels:
    io.kompose.network/keycloak-network: "true"
    io.kompose.service: demo-service
  name: demo-service
spec:
  containers:
    image: sphokuhle/demo
    name: demo-service
    ports:
      - containerPort: 8443
    resources: {}
  restartPolicy: Never
status: {}